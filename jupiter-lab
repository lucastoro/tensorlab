#!/bin/bash

# for instructions on how to compile your own TENSORFLOW_WHEEL:
# https://www.tensorflow.org/install/source

DOCKER=nvidia-docker

function build {
  local TENSORFLOW_WHEEL=$1

  [[ -z "$TENSORFLOW_WHEEL" ]] && {
    echo 'missing tensorflow wheel file'
    exit 1
  }

  [[ -r "$TENSORFLOW_WHEEL" ]] || {
    echo "cannot read $TENSORFLOW_WHEEL"
    exit 1
  }

  local TMPDIR=$(mktemp -d)
  cp $TENSORFLOW_WHEEL $TMPDIR
  TENSORFLOW_WHEEL=$(basename $TENSORFLOW_WHEEL)
  pushd $TMPDIR
  echo "FROM tensorflow/tensorflow:latest-gpu-jupyter" >> Dockerfile 
  echo "COPY $TENSORFLOW_WHEEL /tmp/" >> Dockerfile
  echo "RUN apt update && apt install -y python3-pip wget rsync" >> Dockerfile
  echo "RUN pip3 install --upgrade pip" >> Dockerfile
  echo "RUN pip3 install jupyterlab matplotlib ipyvolume" >> Dockerfile
  echo "RUN pip3 install /tmp/$TENSORFLOW_WHEEL" >> Dockerfile
  echo "RUN rm /tmp/$TENSORFLOW_WHEEL" >> Dockerfile
  # nodejs is needed by some notebook extensions like ipyvolume, 16:04 has an outdated version, must be installed by tarball
  echo "RUN wget https://nodejs.org/dist/v10.15.3/node-v10.15.3-linux-x64.tar.xz" >> Dockerfile
  echo "RUN tar -xf node-v10.15.3-linux-x64.tar.xz" >> Dockerfile
  echo "RUN rsync -a node-v10.15.3-linux-x64/ /usr/" >> Dockerfile
  echo "RUN rm node-v10.15.3-linux-x64.tar.xz" >> Dockerfile
  echo "RUN rm -r node-v10.15.3-linux-x64" >> Dockerfile
  # ipyvolume needs a bit of work to be enabled
  echo "RUN jupyter labextension install @jupyter-widgets/jupyterlab-manager" >> Dockerfile
  echo "RUN jupyter labextension install ipyvolume" >> Dockerfile
  echo "RUN jupyter labextension install jupyter-threejs" >> Dockerfile
  echo "RUN mkdir /.ipyvolume" >> Dockerfile
  echo "RUN chmod 777 /.ipyvolume" >> Dockerfile
  # default to running the lab
  echo 'CMD ["jupyter", "lab", "--no-browser"]' >> Dockerfile
  
  $DOCKER build -t jupyterlab:tensorflow .
  local RESULT=$?
  popd; rm -rf $TMPDIR
  return $RESULT
}

function launch {
  $DOCKER run --net host --rm -it -v $PWD:/media/shared -u $(id -u):$(id -g) jupyterlab:tensorflow $@ 
}

[ "$1" == '--build' ] && {
  shift
  build $@
} || {
  launch $@
}
